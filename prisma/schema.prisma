// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  
}

// Necessary for Next auth

model Session {
  id           String   @id @default(cuid()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("Sessions")
}

model User {
  id            String    @id @default(cuid()) @map("_id") @db.ObjectId
  name          String    @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  sessions      Session[]
  @@map("Users")
}

model VerificationToken {
    id            String    @id @default(cuid()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

  @@unique([identifier, token])
}

enum Gender {
  M
  F
}

model Patient {
  national_id String @id @default(auto()) @map("_id") @db.ObjectId
  full_name   String
  date_of_birth DateTime @db.Date
  gender Gender 
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  @@map("Patients")
}
